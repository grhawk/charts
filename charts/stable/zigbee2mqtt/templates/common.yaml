{{/* Make sure all variables are set properly */}}
{{- include "common.values.setup" . }}

{{/* Append the configMap volume to the volumes */}}
{{- define "zigbee2mqtt.settingsVolume" -}}
enabled: "true"
mountPath: "/app/configuration.yaml"
subPath: "configuration.yaml"
type: "custom"
volumeSpec:
  configMap:
    name: {{ include "common.names.fullname" . }}-settings
{{- end -}}
{{- $_ := set .Values.persistence "zigbee2mqtt-settings" (include "zigbee2mqtt.settingsVolume" . | fromYaml) -}}


{{- define "zigbee2mqtt.certsVolumes.clientKey" -}}
enabled: "true"
mountPath: "/certs/zigbee2mqtt.key"
subPath: "zigbee2mqtt.key"
type: "custom"
volumeSpec:
  secret:
    defaultMode: 0555
    secretName: {{ template "common.names.fullname" .  }}-secrets
{{- end -}}
{{- if .Values.tls.enabled  -}}
{{- $_ := set .Values.persistence "clientkey" (include "zigbee2mqtt.certsVolumes.clientKey" . | fromYaml) -}}
{{- end -}}

{{- define "zigbee2mqtt.certsVolumes.clientCrt" -}}
enabled: "true"
mountPath: "/certs/zigbee2mqtt.crt"
subPath: "zigbee2mqtt.crt"
type: "custom"
volumeSpec:
  secret:
    defaultMode: 0555
    secretName: {{ template "common.names.fullname" .  }}-secrets
{{- end -}}
{{- if .Values.tls.enabled  -}}
{{- $_ := set .Values.persistence "clientcrt" (include "zigbee2mqtt.certsVolumes.clientCrt" . | fromYaml) -}}
{{- end -}}

{{- define "zigbee2mqtt.certsVolumes.caCrt" -}}
enabled: "true"
mountPath: "/certs/ca.crt"
subPath: "ca.crt"
type: "custom"
volumeSpec:
  secret:
    defaultMode: 0555
    secretName: {{ template "common.names.fullname" .  }}-ca-crt
{{- end -}}
{{- if .Values.tls.enabled  -}}
{{- $_ := set .Values.persistence "cacrt" (include "zigbee2mqtt.certsVolumes.caCrt" . | fromYaml) -}}
{{- end -}}

{{/* Render the templates */}}
{{ include "common.all" . }}
